name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  build-and-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Build binary
        run: go build -o bin/server ./cmd/server

      - name: Launch server and verify /healthz
        run: |
          ./scripts/start-server-for-ci.sh 18080 20 2
          SERVER_PID=$(cat server.pid 2>/dev/null || echo "")
          if [ -n "$SERVER_PID" ]; then
            kill $SERVER_PID
          fi

      - name: Docker build
        run: docker build -t plane-integration:ci .

      - name: Run container and verify /healthz
        run: |
          docker run -d --rm --name plane-ci -p 18081:8080 plane-integration:ci
          # 等待容器启动，Docker 容器可能需要更长时间
          sleep 3
          for i in {1..30}; do 
            curl -fsS http://localhost:18081/healthz && ok=1 && break || sleep 1
          done
          if [ -z "$ok" ]; then 
            echo "container health check failed after $((3 + i)) seconds"
            docker logs plane-ci
            exit 1
          fi
          docker rm -f plane-ci

  db-migrate-verify:
    runs-on: ubuntu-latest
    env:
      ACTION_MIGRATE_TARGET: ${{ secrets.ACTION_MIGRATE_TARGET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: plane_integration
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
      - name: Build binary
        run: go build -o bin/server ./cmd/server
      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Run server with DATABASE_URL (auto-migrate) and verify schema
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/plane_integration?sslmode=disable
          PORT: 18082
        run: |
          ./scripts/start-server-for-ci.sh 18082 20 2
          SERVER_PID=$(cat server.pid 2>/dev/null || echo "")
          if [ -n "$SERVER_PID" ]; then
            kill $SERVER_PID 2>/dev/null || true
          fi
          # verify some core tables exist
          psql "$DATABASE_URL" -Atc "SELECT to_regclass('public.workspaces')" | grep -q workspaces
          psql "$DATABASE_URL" -Atc "SELECT to_regclass('public.repo_project_mappings')" | grep -q repo_project_mappings
          psql "$DATABASE_URL" -Atc "SELECT to_regclass('public.thread_links')" | grep -q thread_links
          kill $(cat server.pid)

      - name: Optional migration against external DATABASE_URL (disabled by default)
        if: ${{ env.ACTION_MIGRATE_TARGET == 'true' && env.DATABASE_URL != '' }}
        env:
          PORT: 18083
        run: |
          echo "Running migrations against external DATABASE_URL (be careful!)"
          PORT=18083 ./bin/server & echo $! > server.pid
          sleep 5
          kill $(cat server.pid)
